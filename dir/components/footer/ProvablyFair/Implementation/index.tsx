import React from "react";

const Implementation = () => {
    return (
        <div className="self-stretch flex flex-1 mx-2 flex-col justify-start items-start gap-6 overflow-y-auto">
            <div className="self-stretch text-white text-[16px] font-medium">
                For each verifiable bet, a client seed, a server seed, and a nonce are used as the input parameters for the{" "}
                <span className="text-[#ffa31a]">random number generator</span>. Bytes are generated using the{" "}
                <span className="text-[#ffa31a]">HMAC SHA256</span> function. This function creates 32 random bytes (0-255)
                from a given server seed and a message. The message is created using the client seed, the nonce, and an
                incremental number (round). This number, starting with 0, increases by one every time the 32 bytes returned
                by the HMAC SHA256 function are used. The message is created by concatenating the client seed, a colon, the
                nonce, another colon, and the incremental number.
            </div>
            <div className="self-stretch text-white text-[20px] font-bold">CLIENT SEED</div>
            <div className="self-stretch text-white text-[16px] font-medium">
                This is a passphrase or a randomly generated selection of text that is determined by the player or their
                browser. This can be edited and changed regularly (if desired) to create a new chain of randomness.
            </div>
            <div className="self-stretch text-white text-[20px] font-bold">SERVER SEED</div>
            <div className="self-stretch flex flex-col gap-2">
                <div className="self-stretch text-white text-[16px] font-medium">
                    The server seed is generated by our system as a random 64-character hex string. You will then be provided
                    with an encrypted hash of the server seed before you place any bets. The seed is encrypted to ensure that
                    the outcome cannot be calculated by the player beforehand, but still provides the guarantee that the
                    outcome has been pre-determined and not changed after the bet has been made.
                </div>
                <div className="self-stretch text-white text-[16px] font-medium">
                    To reveal the hashed server seed, the seed must be rotated by the player, which triggers the replacement
                    with a newly generated seed. From this point, you can verify any bets made with the previous server seed
                    to verify both the legitimacy of the server seed with the encrypted hash that was provided, and the
                    outcomes of each bet placed on the casino when it was active.
                </div>
            </div>
            <div className="self-stretch text-white text-[20px] font-bold">NONCE</div>
            <div className="self-stretch text-white text-[16px] font-medium">
                The nonce is simply a number that increments as every new bet is made. This generates a unique input per
                game, without having to generate a new client seed and server seed each time you play.
            </div>
        </div>
    );
};

export default Implementation;
